buildscript {
    ext {
        kotlinVersion = '2.0.20'
        junitVersion = '5.11.0'
    }

    ext['junit-jupiter.version'] = junitVersion
}

plugins {
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.plugin.jpa' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.spring' version "${kotlinVersion}"
}

group = 'com.litvin'
version = '1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-web',
            'com.fasterxml.jackson.module:jackson-module-kotlin',
            'org.jetbrains.kotlin:kotlin-reflect',
            'org.springframework.session:spring-session-core',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0',

            // db
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.liquibase:liquibase-core',

            // cache
            'org.springframework.boot:spring-boot-starter-cache',
            'com.github.ben-manes.caffeine:caffeine:3.1.8',

            'io.github.openfeign:feign-core:13.3',
            'io.github.openfeign:feign-jackson:13.3',
            'io.github.openfeign:feign-hc5:13.3',
            'io.github.openfeign:feign-slf4j:13.3',

            'org.apache.httpcomponents.client5:httpclient5:5.3.1',

            // logging
            'io.github.microutils:kotlin-logging:3.0.5'
    )

    runtimeOnly(
            'org.postgresql:postgresql',
    )

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
    )

    testImplementation(
            'org.jetbrains.kotlin:kotlin-test-junit5',
            'org.junit.platform:junit-platform-launcher',

            platform('org.junit:junit-bom'),
            'org.junit.jupiter:junit-jupiter',
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test',

            'org.testcontainers:testcontainers:1.20.1',
            'org.testcontainers:postgresql:1.20.1',
            'org.testcontainers:junit-jupiter:1.20.1',

            'org.mockito:mockito-core:5.12.0',
            'org.mockito:mockito-junit-jupiter:5.12.0',
            'org.wiremock:wiremock-jetty12:3.9.1',

            'io.mockk:mockk:1.13.12',
            'com.ninja-squad:springmockk:4.0.2',
            'io.kotest:kotest-assertions-core:5.9.1',
            'io.kotest:kotest-assertions-json:5.9.1',
            'commons-configuration:commons-configuration:1.10',
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

bootBuildImage {
    imageName = "exchange-service"
    environment = [
            'BP_JVM_VERSION': '21'
    ]
}